buildscript {
    ext {
        springBootVersion = '1.5.9.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'java'
apply plugin: 'maven'
//apply plugin: 'spring-boot'
apply plugin: 'org.springframework.boot'

//Gradle 和 idea 集成时如何不自动下载依赖源码和javadoc
idea {
    module {
        downloadJavadoc = false
        downloadSources = true
    }
}

// JVM 版本号
sourceCompatibility = 1.8
targetCompatibility = 1.8

// java编译的时候缺省状态下会因为中文字符而失败
[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

// In this section you declare where to find the dependencies of your project
repositories {
    mavenCentral()
    maven {
        url  "http://jcenter.bintray.com"
    }
}
dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE'
    }
}

configurations.all {
    // Don't cache changing modules at all.
    resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'
    resolutionStrategy.cacheChangingModulesFor 10, 'minutes'
}

// In this section you declare the dependencies for your production and test code
dependencies {

    compile fileTree(dir: 'libs', include: '*.jar')
    //other
    compile('org.slf4j:slf4j-api:1.7.24')
    compile('com.google.code.gson:gson:2.8.0')
    compile('javax.inject:javax.inject:1')
    compile('javax.xml.stream:stax-api:1.0-2')
    //compile('org.bouncycastle:bctsp-jdk16:1.46')
    compile('org.bouncycastle:bcpkix-jdk15on:1.55')
    compile('org.bouncycastle:bcprov-jdk15on:1.55')
    compile('com.thoughtworks.xstream:xstream:1.4.9')
    compile('org.aspectj:aspectjweaver:1.8.10')

    //spring
    compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-data-redis")
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')

    //nekohtml解决thymeleaf标签闭合问题配合spring.thymeleaf.mode = HTML5 或 LEGACYHTML5使用
    compile('net.sourceforge.nekohtml:nekohtml:1.9.22')
    //compile('org.springframework.cloud:spring-cloud-starter-eureka')

    //db
    //compile('mysql:mysql-connector-java:6.0.6')
    compile('mysql:mysql-connector-java:5.1.41')
    compile('com.alibaba:druid:1.0.29')
    compile('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0')

    //http
    compile('com.squareup.okhttp3:okhttp:3.7.0')
    compile('com.squareup.okio:okio:1.12.0')

    //compile("org.apache.httpcomponents:httpclient:4.5.3")

    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.31'

    testCompile("org.springframework.boot:spring-boot-starter-test:${springBootVersion}")

    compile group: 'org.apache.poi', name: 'poi', version: '3.15'
    compile group: 'org.apache.poi', name: 'poi-ooxml', version: '3.15'

    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.1'

    compile group: 'commons-io', name: 'commons-io', version: '2.4'

    compile 'commons-beanutils:commons-beanutils:1.9.3'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'

    compile("javax.mail:mail:1.4.1")

    compile('org.projectlombok:lombok')
    compile 'org.apache.shiro:shiro-spring:1.4.0'

}

task initProject << {
    sourceSets*.java.srcDirs*.each{ it.mkdirs() }
    sourceSets*.resources.srcDirs*.each{ it.mkdirs()}
}

// Solve the problem: Window’s command length limit
// the error: CreateProcess error=206, The filename or extension is too long.
// Solution: http://tuhrig.de/gradles-bootrun-and-windows-command-length-limit/
task pathingJar(type: Jar) {
    dependsOn configurations.runtime
    appendix = 'pathing'

    doFirst {
        manifest {
            attributes "Class-Path": configurations.runtime.files.collect {
                it.toURL().toString().replaceFirst('/file:/+/', '/')
            }.join(' ')
        }
    }
}

bootRun {
    dependsOn pathingJar
    doFirst {
        classpath = files("$buildDir/classes/main", "$buildDir/resources/main", pathingJar.archivePath)
    }

    args "--spring.profiles.active=dev"
}


jar {
    manifest {
        attributes(
                'Main-Class': 'com.db.promote.Application'
        )
    }
}
